{"version":3,"sources":["Provider.tsx","Components/Sidepanel/Rooms.tsx","Components/Sidepanel/Users.tsx","Components/Sidepanel/Bots.tsx","Components/Sidepanel/SidePanel.tsx","Components/Main/Chat/ViewMessage.tsx","Components/Main/Chat/Messages.tsx","Components/Main/Invite.tsx","Components/Main/Chat.tsx","Components/Main/Usershow.tsx","Components/Main/Bots/Qiita.tsx","Components/Main/Bot.tsx","Components/Main/Main.tsx","Components/Home.tsx","Components/auth/Login.tsx","Components/auth/Registrations.tsx","Components/auth/auth.tsx","Components/Userpage.tsx","Components/ChangeProf.tsx","PrivateRoute.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["CurrentUserContext","createContext","RoomContext","MainContext","UserContext","BotContext","Provider","props","useState","userstate","setUserState","loginStatus","setLoginStatus","room_id","setRoom_id","type","setType","user_id","setUser_id","bot_id","setBot_id","change_flag","setChange_flag","value","children","Dropdown","posed","ul","visible","opacity","originY","scaleY","hidden","StyledDropdown","styled","Item","li","useStyles","makeStyles","theme","createStyles","demo","backgroundColor","palette","background","paper","room_name","textTransform","Rooms","rooms","setRooms","classes","name","setName","errors","setErrors","flag","id","showmember","setShowmember","currentUser","useContext","room","main","anchorEl","setAnchorEl","open","Boolean","useEffect","axios","get","process","params","then","results","data","console","log","catch","talkShow","showMember","handleClose","TextField","fullWidth","label","onChange","event","target","helperText","required","inputProps","maxLength","onKeyDown","e","keyCode","preventDefault","post","withCredentials","response","status","error","hundleSubmit","className","List","map","ListItem","key","Hidden","smDown","ListItemAvatar","Avatar","ListItemText","primary","Button","onClick","ListItemSecondaryAction","mdUp","IconButton","currentTarget","iconClick","Menu","keepMounted","onClose","MenuItem","pose","users","u","Users","setUsers","React","dense","search","setSearch","user","showUserpage","talkCreate","opponent_id","src","image","Bots","bots","setBots","bot","SidePanel","setValue","handleChange","newValue","xsDown","BottomNavigation","BottomNavigationAction","icon","smUp","root","inline","display","ViewMessage","message","currerntUser","alignItems","secondary","Fragment","Typography","component","variant","color","alt","Divider","confirmation","Messages","messageData","content","Invite","User_ids","getUsers","user_ids","Box","px","margin","style","Grid","container","includes","xs","md","ListItemIcon","FormControlLabel","control","Checkbox","push","belong","flexGrow","button","spacing","marginTop","Chat","cableApp","roomsGet","setMessage","messages","setMessages","setUser_ids","invitation","setInvitation","setRoom_name","updateUsers","setupSubscription","subscriptions","create","channel","received","scrollArea","document","getElementById","updateMessage","scrollTop","scrollHeight","user_name","handleClick","leaveClick","delete","length","deleteClick","window","confirm","item","justify","PaperProps","endIcon","Icon","useStyle","minHeight","fontSize","prof","UserShow","setUser","User","profile","padding","textAlign","text","Qiita","setText","articles","setArticles","setFlag","t","title","href","url","width","Bot","Main","Home","flexDirection","avatar","form","submit","Login","setauth","useForm","register","handleSubmit","email","setEmail","password","setPassword","navigate","useNavigate","maxWidth","CssBaseline","noValidate","onSubmit","logged_in","toast","autoComplete","autoFocus","inputRef","pattern","Registration","passwordConfirmation","setPasswordConfirmation","password_confirmation","passwordconfirmation","Auth","auth","setAuth","Registrations","paddingTop","large","height","Userpage","ChageProf","setProf","loading","setLoading","setImage","p","defaultValue","canvas","ctx","getContext","img","Image","onload","iw","ih","scale","Math","min","iwScaled","ihScaled","drawImage","resizeData","toDataURL","URL","createObjectURL","files","setimage","multiline","rows","patch","Container","Component","redirectLink","to","PrivateRoute","path","a","userget","element","list","menuButton","marginRight","appButton","App","handleLogoutClick","Helmet","htmlAttributes","lang","AppBar","position","Toolbar","textDecoration","ChangeProf","replace","location","hostname","match","cable","actionCable","createConsumer","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c9b319c.chunk.js","sourcesContent":["import React, { createContext, Dispatch, SetStateAction, useState } from 'react';\r\nimport { User } from \"./Types\";\r\n\r\ntype MaybeUser = User | null;\r\n\r\ninterface CurrentUserContextValue {\r\n  userstate: MaybeUser\r\n  loginStatus: boolean\r\n  setUserState: Dispatch<SetStateAction<MaybeUser>>\r\n  setLoginStatus: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\ninterface RoomContextValue {\r\n  room_id: number | null;\r\n  setRoom_id: Dispatch<SetStateAction<number|null>>\r\n  change_flag: boolean\r\n  setChange_flag: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\ninterface MainContextValue {\r\n  type: string;\r\n  setType: Dispatch<SetStateAction<string>>\r\n}\r\n\r\ninterface UserContextValue {\r\n  user_id: number | null;\r\n  setUser_id: Dispatch<SetStateAction<number|null>>\r\n}\r\n\r\ninterface BotContextValue {\r\n  bot_id: number | null\r\n  setBot_id: Dispatch<SetStateAction<number | null>>\r\n}\r\n\r\nexport const CurrentUserContext = createContext<CurrentUserContextValue>((null as any) as CurrentUserContextValue,);\r\nexport const RoomContext = createContext<RoomContextValue>((null as any) as RoomContextValue,);\r\nexport const MainContext = createContext<MainContextValue>((null as any) as MainContextValue,);\r\nexport const UserContext = createContext<UserContextValue>((null as any) as UserContextValue);\r\nexport const BotContext = createContext<BotContextValue>((null as any) as BotContextValue);\r\n\r\nexport const Provider:React.FunctionComponent = props => {\r\n  const [userstate, setUserState] = useState<MaybeUser>(null);\r\n  const [loginStatus, setLoginStatus] = useState<boolean>(false);\r\n  const [room_id, setRoom_id] = useState<number|null>(null);\r\n  const [type, setType] = useState<string>(\"\");\r\n  const [user_id, setUser_id] = useState<number|null>(null);\r\n  const [bot_id, setBot_id] = useState<number|null>(null);\r\n  const [change_flag, setChange_flag] = useState<boolean>(false);\r\n\r\n  return (\r\n    <MainContext.Provider value={{type, setType}}>\r\n      <CurrentUserContext.Provider value={{userstate, loginStatus,setUserState, setLoginStatus}}>\r\n        <RoomContext.Provider value={{room_id,setRoom_id,change_flag,setChange_flag}}>\r\n          <BotContext.Provider value={{bot_id, setBot_id}}>\r\n            <UserContext.Provider value={{user_id,setUser_id}}>\r\n              {props.children}\r\n            </UserContext.Provider>\r\n          </BotContext.Provider>\r\n        </RoomContext.Provider>\r\n      </CurrentUserContext.Provider>\r\n    </MainContext.Provider>\r\n  )\r\n}\r\n\r\n","import React, { FC, useContext, useEffect, useState, SyntheticEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Room } from 'Types';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { CurrentUserContext, MainContext, RoomContext } from 'Provider';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport styled from 'styled-components';\r\nimport posed from 'react-pose';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nimport '../../styles/Rooms.css'\r\n\r\nconst props = {\r\n  visible: {\r\n    opacity: 1,\r\n    originY: 0,\r\n    scaleY: 1\r\n  },\r\n  hidden: {\r\n    opacity: 0,\r\n    scaleY: 0\r\n  }\r\n};\r\n\r\nconst Dropdown = posed.ul(props);\r\nconst StyledDropdown = styled(Dropdown)`\r\n  \r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.24);\r\n  padding-left: 0;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  list-style: none;\r\n  border: none;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\r\n  font-size: 14px;\r\n  color: #666;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  \r\n`;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    demo: {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    room_name: {\r\n      textTransform: 'none',\r\n    },\r\n  })\r\n)\r\n\r\ntype flag = {\r\n  flag:boolean,\r\n  id: number,\r\n}\r\n\r\n\r\nconst Rooms: FC = () => {\r\n  const [rooms, setRooms] = useState<Room[]>([]);\r\n  const classes = useStyles();\r\n  const [name, setName] = useState(\"\");\r\n  const [errors, setErrors] = useState(\"\");\r\n  const [showmember, setShowmember] = useState<flag>({flag:false,id:0});\r\n\r\n  const [room_id, setRoom_id] = useState(0);\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  const room = useContext(RoomContext);\r\n  const main = useContext(MainContext);\r\n\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  useEffect(() => {\r\n    axios.get(`${process.env.REACT_APP_API_URL}/rooms`,\r\n    {\r\n      params: {\r\n        user_id: currentUser.userstate?.id\r\n      }\r\n    })\r\n    .then((results) => {\r\n      setRooms(results.data)\r\n      console.log(rooms)\r\n    })\r\n    .catch((data) => {\r\n      console.log(data)\r\n    })\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`${process.env.REACT_APP_API_URL}rooms`,\r\n    {\r\n      params: {\r\n        user_id: currentUser.userstate?.id\r\n      }\r\n    })\r\n    .then((results) => {\r\n      setRooms(results.data)\r\n      console.log(results.data)\r\n    })\r\n    .catch((data) => {\r\n      console.log(data)\r\n    })\r\n  },[room.room_id]);\r\n\r\n  useEffect(() => {\r\n    room.setChange_flag(false);\r\n    axios.get(`${process.env.REACT_APP_API_URL}/rooms`,\r\n    {\r\n      params: {\r\n        user_id: currentUser.userstate?.id\r\n      }\r\n    })\r\n    .then((results) => {\r\n      setRooms(results.data)\r\n      console.log(results.data)\r\n    })\r\n    .catch((data) => {\r\n      console.log(data)\r\n    })\r\n  },[room.change_flag]);\r\n\r\n\r\n  const hundleSubmit = (e: SyntheticEvent) => {\r\n    setErrors(\"\");\r\n    if (name) {\r\n      axios.post(`${process.env.REACT_APP_API_URL}/rooms`,\r\n      {\r\n        room: {\r\n          name: name,\r\n          user_id: currentUser.userstate?.id\r\n        }\r\n      },\r\n      { withCredentials: true}\r\n      ).then(response => {\r\n        if (response.data.status === 'created'){\r\n          axios.get(`${process.env.REACT_APP_API_URL}/rooms`,\r\n          {\r\n            params: {\r\n              user_id: currentUser.userstate?.id\r\n            }\r\n          })\r\n          .then((results) => {\r\n            console.log(results)\r\n            setRooms(results.data)\r\n          })\r\n          .catch((data) =>{\r\n            console.log(data)\r\n          })\r\n        }else{\r\n          console.log(response.data.errors);\r\n          setErrors(response.data.errors);\r\n        }\r\n      }).catch(error => {\r\n        console.log(\"message error\", error)\r\n      })\r\n    }\r\n    e.preventDefault();\r\n  }\r\n\r\n  const talkShow = (id:number) => {\r\n    main.setType(\"Chat\");\r\n    room.setRoom_id(id);\r\n  }\r\n\r\n  const showMember = (id:number) => {\r\n\r\n    if (!showmember.flag){\r\n    setShowmember({flag:true,id:id});\r\n    \r\n    }else{\r\n      setShowmember({flag:false,id:0});\r\n    }\r\n  }\r\n\r\n  const iconClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return(\r\n    <>\r\n      <TextField  \r\n          fullWidth\r\n          label=\"ルーム作成\"\r\n          onChange={event => setName(event.target.value)}\r\n          helperText={errors}\r\n          required\r\n          inputProps={{\r\n            maxLength: 20,\r\n          }}\r\n          onKeyDown={e => {\r\n            if (e.keyCode === 13) {\r\n              // エンターキー押下時の処理\r\n              e.preventDefault();\r\n              hundleSubmit(e);\r\n            }\r\n          }}\r\n        />\r\n\r\n      <div className={classes.demo}>\r\n        <div className=\"Rooms\">\r\n          <List>\r\n            {rooms.map((room) => (\r\n              <>\r\n                <ListItem key={room.id}>\r\n                  <Hidden smDown>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <ChatIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                  </Hidden>\r\n                  <ListItemText\r\n                    primary={<Button onClick={()=>talkShow(room.id)} className={classes.room_name}>{room.name}</Button>}\r\n                  />\r\n\r\n                  {/* メンバー表示 */}\r\n                  <Hidden smDown>\r\n                    <ListItemSecondaryAction>\r\n                      <Button\r\n                        key={room.id}\r\n                        onClick={()=>showMember(room.id)}\r\n                      >\r\n                        <PeopleIcon/>\r\n                      </Button>\r\n                    </ListItemSecondaryAction>\r\n                  </Hidden>\r\n\r\n                  {/* ボタン表示 */}\r\n                  <Hidden mdUp>\r\n                    <IconButton onClick={(event)=>{iconClick(event);setRoom_id(room.id);}}>\r\n                      <MoreVertIcon/>\r\n                    </IconButton>\r\n                    <Menu\r\n                      id=\"long-menu\"\r\n                      anchorEl={anchorEl}\r\n                      keepMounted\r\n                      open={open}\r\n                      onClose={handleClose}\r\n                      \r\n                    >\r\n                      <MenuItem  onClick={handleClose}>\r\n                        <IconButton\r\n                          key={room.id}\r\n                          onClick={()=>showMember(room_id)}\r\n                        >\r\n                          <PeopleIcon/>\r\n                        </IconButton>\r\n                      </MenuItem>\r\n                    </Menu>\r\n                  </Hidden>\r\n\r\n                </ListItem>\r\n\r\n\r\n                {/* メンバー表示欄 */}\r\n                <>\r\n                  <StyledDropdown pose={showmember.flag ? 'visible' : 'hidden'}>\r\n                    {showmember.flag && showmember.id === room.id ?\r\n                      <>\r\n                      {room.users.map((u) => (\r\n                          <Item>{u.name}</Item>\r\n                      ))}\r\n                      </>\r\n                    :<></> }\r\n                  </StyledDropdown>\r\n                </>\r\n              </>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Rooms;","import React, { FC, useEffect, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { User } from 'Types';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { CurrentUserContext, MainContext, RoomContext, UserContext } from 'Provider';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    demo: {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    room_name: {\r\n      textTransform: 'none',\r\n    },\r\n  })\r\n)\r\n\r\nconst Users: FC = () => {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [errors, setErrors] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const main = useContext(MainContext);\r\n  const user = useContext(UserContext);\r\n  const currentUser = useContext(CurrentUserContext);\r\n  const room = useContext(RoomContext);\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    axios.get(`${process.env.REACT_APP_API_URL}/users`,)\r\n    .then((results) => {\r\n      setUsers(results.data)\r\n      console.log(users)\r\n    })\r\n    .catch((data) => {\r\n      console.log(data)\r\n    })\r\n  },[]);\r\n\r\n  const hundleSubmit = () => {\r\n    axios.get(`${process.env.REACT_APP_API_URL}/users`,{\r\n      params:{\r\n        search: search\r\n      }\r\n    })\r\n    .then((results) => {\r\n      setUsers(results.data)\r\n      console.log(users)\r\n    })\r\n    .catch((data) => {\r\n      console.log(data)\r\n    })\r\n  }\r\n\r\n  const showUserpage = (id:number) => {\r\n    main.setType(\"UserPage\");\r\n    user.setUser_id(id);\r\n  }\r\n\r\n  const talkCreate = (opponent_id: number, name: string) => {\r\n    axios.post(`${process.env.REACT_APP_API_URL}/toakcreate`,\r\n      {\r\n        room: {\r\n          name: name,\r\n          user_id: currentUser.userstate?.id,\r\n          opponent_id: opponent_id,\r\n        }\r\n      },\r\n      { withCredentials: true}\r\n      ).then(response => {\r\n        main.setType(\"Chat\");\r\n        room.setRoom_id(response.data.room.id);\r\n        \r\n      }).catch(error => {\r\n        console.log(\"message error\", error)\r\n      })\r\n  }\r\n\r\n  const iconClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TextField  \r\n          fullWidth\r\n          label=\"名前検索\"\r\n          onChange={event => setSearch(event.target.value)}\r\n          helperText={errors}\r\n          required\r\n          inputProps={{\r\n            maxLength: 20,\r\n          }}\r\n          onKeyDown={e => {\r\n            if (e.keyCode === 13) {\r\n              // エンターキー押下時の処理\r\n              e.preventDefault();\r\n              hundleSubmit();\r\n            }\r\n          }}\r\n        />\r\n      <div className={classes.demo}>\r\n        <div className=\"Rooms\">\r\n          <List dense={dense}>\r\n            {users.map((user) => (\r\n              currentUser.userstate?.id !== user.id &&\r\n              <ListItem key={user.id}>\r\n                <Hidden smDown>\r\n                  <ListItemAvatar>\r\n                    <Avatar src={ user.image  ? user.image : \"\" } />\r\n                  </ListItemAvatar>\r\n                </Hidden>\r\n                <ListItemText\r\n                  primary={<Button className={classes.room_name} onClick={()=>showUserpage(user.id)}>{user.name}</Button>}\r\n                />\r\n                <Hidden smDown>\r\n                  <ListItemSecondaryAction>\r\n                    <Button onClick={()=>talkCreate(user.id,user.name)}>\r\n                      <ChatIcon />\r\n                    </Button>\r\n                  </ListItemSecondaryAction>\r\n                </Hidden>\r\n\r\n                {/* ボタン表示 */}\r\n                <Hidden mdUp>\r\n                  <IconButton onClick={(event)=>{iconClick(event);}}>\r\n                    <MoreVertIcon/>\r\n                  </IconButton>\r\n                  <Menu\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                  >\r\n                    <MenuItem  onClick={handleClose}>\r\n                      <IconButton onClick={()=>talkCreate(user.id,user.name)}>\r\n                        <ChatIcon />\r\n                      </IconButton>\r\n                    </MenuItem>\r\n                  </Menu>\r\n                </Hidden>\r\n              </ListItem>\r\n              \r\n            ))}\r\n          </List>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Users;","import React, { FC, useContext, useState, SyntheticEvent, useEffect } from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { BotContext, MainContext, RoomContext } from 'Provider';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    demo: {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    room_name: {\r\n      textTransform: 'none',\r\n    },\r\n  })\r\n)\r\n\r\ntype Bot = {\r\n  id: number,\r\n  name: string,\r\n}\r\n\r\nconst Bots: FC = () => {\r\n  const classes = useStyles();\r\n  const [dense, setDense] = React.useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [errors, setErrors] = useState(\"\");\r\n  const [bots, setBots] = useState<Bot[]>([]);\r\n  \r\n  const main = useContext(MainContext);\r\n\r\n  const bot_id = useContext(BotContext);\r\n\r\n  const Bots:Bot[] = [{id: 1,name: \"Qiita\"},{id: 2, name: \"News\"},{id: 3, name: \"Weather\"}]\r\n\r\n  const hundleSubmit = (e: SyntheticEvent) => {\r\n    setErrors(\"\");\r\n    \r\n    e.preventDefault();\r\n  }\r\n\r\n  const apiShow = (id:number) => {\r\n    main.setType(\"Api\");\r\n    bot_id.setBot_id(id);\r\n  }\r\n\r\n  const setBot = () => {\r\n    setBots(Bots);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setBot();\r\n  },[])\r\n\r\n  return(\r\n    <>\r\n      <TextField  \r\n          fullWidth\r\n          label=\"Bot検索\"\r\n          onChange={event => setName(event.target.value)}\r\n          helperText={errors}\r\n          required\r\n          inputProps={{\r\n            maxLength: 20,\r\n          }}\r\n          onKeyDown={e => {\r\n            if (e.keyCode === 13) {\r\n              // エンターキー押下時の処理\r\n              e.preventDefault();\r\n              hundleSubmit(e);\r\n            }\r\n          }}\r\n        />\r\n      <div className={classes.demo}>\r\n        <div className=\"Rooms\">\r\n          <List dense={dense}>\r\n            {bots.map((bot) => (\r\n              <ListItem key={bot.id}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <ChatIcon />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={<Button onClick={()=>apiShow(bot.id)} className={classes.room_name}>{bot.name}</Button>}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Bots;","import React, { FC,  useState,  ChangeEvent } from 'react';\r\nimport { BottomNavigation, BottomNavigationAction, Hidden } from '@material-ui/core';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport FaceSharpIcon from '@material-ui/icons/FaceSharp';\r\nimport Rooms from \"./Rooms\";\r\nimport Users from './Users';\r\nimport Bots from './Bots';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n\r\nconst SidePanel: FC = () => {\r\n  const [value, setValue] = useState('rooms');\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleChange = (event: ChangeEvent<{}>, newValue: string) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const iconClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return(\r\n    <>\r\n      {value === \"rooms\" && <Rooms />}\r\n      {value === \"bots\" && <Bots/>}\r\n      {value === \"users\" && <Users/>}\r\n      <Hidden xsDown> \r\n        <BottomNavigation value={value} onChange={handleChange}>\r\n          <BottomNavigationAction label=\"Rooms\" value=\"rooms\" icon={<ChatIcon/>}/>\r\n          <BottomNavigationAction label=\"Bot\" value=\"bots\" icon={<ChatIcon/>}/>\r\n          <BottomNavigationAction label=\"Users\" value=\"users\" icon={<FaceSharpIcon/>}/>\r\n        </BottomNavigation>\r\n      </Hidden>\r\n      <Hidden smUp>\r\n        <IconButton onClick={(event)=>{iconClick(event);}}>\r\n          <MoreHorizIcon/>\r\n        </IconButton>\r\n        <Menu\r\n          id=\"long-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={open}\r\n          onClose={handleClose}\r\n          \r\n        >\r\n          <MenuItem  onClick={handleClose}>\r\n            <IconButton onClick={(event)=>handleChange(event,\"rooms\")}><ChatIcon/></IconButton>\r\n            <IconButton onClick={(event)=>handleChange(event,\"bots\")}><ChatIcon/></IconButton>\r\n            <IconButton onClick={(event)=>handleChange(event,\"users\")}><FaceSharpIcon/></IconButton>\r\n          </MenuItem>\r\n        </Menu>\r\n      </Hidden>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SidePanel;","import React, { FC, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CurrentUserContext } from 'Provider';\r\n\r\nimport '../../../styles/ViewMessage.css';\r\nimport { User } from '../../../Types';\r\n\r\ntype Props = {\r\n  message: any;\r\n  user: User;\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n}));\r\n\r\nconst confirmation = (currerntUser:any,classes:any,message:string, user:User) => {\r\n\r\n  if(currerntUser.userstate?.id === user.id){\r\n    return(\r\n      <List className={classes.root}>\r\n        <ListItem alignItems=\"flex-start\">\r\n          <ListItemText\r\n            className=\"align\"\r\n            primary={ <h1 className=\"name\">{user.name}</h1> }\r\n            secondary={\r\n              <React.Fragment>\r\n                <Typography\r\n                  component=\"span\"\r\n                  variant=\"body2\"\r\n                  className={classes.inline}\r\n                  color=\"textPrimary\"\r\n                >\r\n                { message }\r\n              </Typography>\r\n            </React.Fragment>\r\n            }\r\n          >\r\n          </ListItemText>\r\n          \r\n          <ListItemAvatar>\r\n            <Avatar\r\n              alt=\"ME\"\r\n              src={ user.image  ? user.image : \"\" }\r\n            />\r\n          </ListItemAvatar>\r\n        </ListItem>\r\n        <Divider variant=\"middle\" />\r\n      </List>\r\n    );\r\n  }else {\r\n    return(\r\n      <List className={classes.root}>\r\n        <ListItem alignItems=\"flex-start\">\r\n          <ListItemAvatar>\r\n            <Avatar\r\n              alt=\"Martian\"\r\n              src={ user.image  ? user.image : \"\" }\r\n            />\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n            primary={ <h1 className=\"name\">{user.name}</h1> }\r\n            secondary={\r\n              <React.Fragment>\r\n                <Typography\r\n                  component=\"span\"\r\n                  variant=\"body2\"\r\n                  className={classes.inline}\r\n                  color=\"textPrimary\"\r\n                >\r\n                <p>{ message }</p>\r\n              </Typography>\r\n            </React.Fragment>\r\n            }\r\n          >\r\n          </ListItemText>\r\n        </ListItem>\r\n        <Divider variant=\"middle\" />\r\n      </List>\r\n    );\r\n  }\r\n}\r\n\r\nconst ViewMessage: FC<Props> = ({message, user}) => {\r\n  const classes = useStyles();\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  \r\n  return(\r\n    <>\r\n      {confirmation(currentUser,classes,message,user)}\r\n    </>\r\n  )\r\n  \r\n}\r\n\r\nexport default ViewMessage;","import React, { FC } from 'react';\r\nimport ViewMessage from './ViewMessage';\r\nimport { Message } from '../../../Types';\r\n\r\n\r\ntype Props = {\r\n  messageData: Message[];\r\n}\r\n\r\nconst Messages: FC<Props> = ({ messageData = [] }) => (\r\n  <>\r\n    {messageData.map((data) => (\r\n      <ViewMessage user={ data.user} message={ data.content }/>\r\n    ))}\r\n  </>\r\n)\r\n\r\nexport default Messages;","import React, { FC, useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { User } from \"../../Types\";\r\nimport { Box } from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { CurrentUserContext, RoomContext } from 'Provider';\r\n\r\nimport '../../styles/Invite.css';\r\n\r\ntype Props = {\r\n  User_ids: number[];\r\n  getUsers: () => void;\r\n}\r\n\r\nconst Invite: FC<Props> = ({User_ids,getUsers}) => {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const room = useContext(RoomContext);\r\n\r\n\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get(`${process.env.REACT_APP_API_URL}/users`)\r\n    .then((results) => {\r\n      setUsers(results.data)\r\n      console.log(users)\r\n    })\r\n    .catch((data) => {\r\n      console.log(data)\r\n    })\r\n  },[]);\r\n\r\n  const user_ids: number[]= [];\r\n\r\n  const handleChange = (user_id: number) => {\r\n    user_ids.push(user_id);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    axios.post(`${process.env.REACT_APP_API_URL}/userbelongsrooms`,\r\n    {\r\n      belong: {\r\n        user_id: user_ids,\r\n        room_id: room.room_id,\r\n      }\r\n    },\r\n    { withCredentials: true}\r\n    ).then(response => {\r\n      if(response.data.status === 'created'){\r\n        getUsers();\r\n        room.setChange_flag(true);\r\n      }\r\n    })\r\n  }; \r\n\r\n  const hundleSearch = () => {\r\n    axios.get(`${process.env.REACT_APP_API_URL}/users`,{\r\n      params:{\r\n        search: search\r\n      }\r\n    })\r\n    .then((results) => {\r\n      setUsers(results.data)\r\n      console.log(users)\r\n    })\r\n    .catch((data) => {\r\n      console.log(data)\r\n    })\r\n  }\r\n\r\n\r\n  return(\r\n    <Box px={2}>\r\n      <TextField\r\n        variant=\"standard\"\r\n        margin=\"none\"\r\n        label=\"検索\"\r\n        onChange={event => setSearch(event.target.value)}\r\n        onKeyDown={e => {\r\n          if (e.keyCode === 13) {\r\n            // エンターキー押下時の処理\r\n            e.preventDefault();\r\n            hundleSearch();\r\n          }\r\n        }\r\n        }\r\n      />\r\n      \r\n        \r\n        <div className=\"Users\">\r\n          <List style={{backgroundColor:'white'}}>\r\n          <Grid container>\r\n            {users.map((user)=>{\r\n              return user.id !== currentUser.userstate?.id && !User_ids.includes(user.id) ? \r\n                <Grid xs={12} md={3}>\r\n                  <List>\r\n                  <ListItem key={user.id}>  \r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <FaceIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemIcon>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          color=\"primary\"\r\n                          onChange={() => {handleChange(user.id)}}\r\n                        />\r\n                      }\r\n                      label={user.name}\r\n                      />\r\n                      </ListItemIcon>\r\n                  </ListItem>\r\n                  </List>\r\n                  </Grid>\r\n              : \r\n              <></>\r\n            })}\r\n            </Grid>\r\n          </List>\r\n        </div>\r\n      \r\n        \r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        onClick={handleSubmit}\r\n      >\r\n        招待\r\n      </Button>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Invite;","import React, { FC, useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport Messages from './Chat/Messages';\r\nimport { Message } from '../../Types';\r\nimport { CurrentUserContext, RoomContext } from \"../../Provider\";\r\nimport actionCable from 'actioncable';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Invite from './Invite';\r\nimport { Grid } from '@material-ui/core';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport '../../styles/ChatRoom.css';\r\n\r\ntype Props = {\r\n  cableApp :actionCable.Cable;\r\n  roomsGet: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      marginTop: \"10px\",\r\n    },\r\n  }),\r\n);\r\n\r\nconst Chat: FC<Props> = ({cableApp, roomsGet}) =>{\r\n  const currentUser = useContext(CurrentUserContext);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [errors, setErrors] = useState(\"\");\r\n  const [user_ids, setUser_ids] = useState<number[]>([]);\r\n  const [invitation, setInvitation] = useState(false);\r\n  const room = useContext(RoomContext);\r\n  const [room_name, setRoom_name] = useState(\"\");\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n\r\n  const updateMessage = (messages: Message[]) => {\r\n    setMessages(messages)\r\n  }\r\n\r\n  const updateUsers = (users: number[]) => {\r\n    setUser_ids(users);\r\n  }\r\n\r\n  const getUsers = () => {\r\n    axios.get(`${process.env.REACT_APP_API_URL}/getuser_ids`,\r\n    {\r\n      params: {\r\n        room_id: room.room_id\r\n      }\r\n    })\r\n    .then((results) => {\r\n      updateUsers(results.data)\r\n      \r\n    })\r\n    .catch((data) =>{\r\n      console.log(data)\r\n    })\r\n  }\r\n\r\n  const setupSubscription = () => {\r\n    cableApp.subscriptions.create({\r\n      channel: 'MessagesChannel',room_id: room.room_id},{\r\n      received: (data) => {\r\n        const scrollArea = document.getElementById(\"scroll-area\");\r\n        updateMessage(data)\r\n        if (scrollArea) {\r\n          scrollArea.scrollTop = scrollArea.scrollHeight\r\n        }\r\n        console.log(messages)\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setupSubscription();\r\n  },[room.room_id]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`${process.env.REACT_APP_API_URL}/getuser_ids`,\r\n    {\r\n      params: {\r\n        room_id: room.room_id\r\n      }\r\n    })\r\n    .then((results) => {\r\n      updateUsers(results.data)\r\n    })\r\n    .catch((data) =>{\r\n      console.log(data)\r\n    })\r\n  },[room.room_id]);\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get(`${process.env.REACT_APP_API_URL}/rooms/${room.room_id}`,\r\n    {\r\n      params: {\r\n        id: room.room_id\r\n      }\r\n    })\r\n    .then((results) => {\r\n      console.log(results)\r\n      setRoom_name(results.data.name);\r\n      getUsers();\r\n    })\r\n    .catch((data) =>{\r\n      console.log(data)\r\n      setRoom_name(\"\");\r\n    })\r\n  },[room.room_id]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`${process.env.REACT_APP_API_URL}/messages`,\r\n    {\r\n      params: {\r\n        room_id: room.room_id\r\n      }\r\n    })\r\n    .then((results) => {\r\n      console.log(results)\r\n      setMessages(results.data)\r\n      \r\n      const scrollArea = document.getElementById(\"scroll-area\");\r\n      if (scrollArea) {\r\n        scrollArea.scrollTop = scrollArea.scrollHeight\r\n      }\r\n    })\r\n    .catch((data) =>{\r\n      console.log(data)\r\n    })\r\n  },[room.room_id]);\r\n\r\n  const hundleSubmit = () => {\r\n    if (message) {\r\n      setErrors(\"\");\r\n      axios.post(`${process.env.REACT_APP_API_URL}/messages`,\r\n      {\r\n        message: {\r\n          content: message,\r\n          user_name: currentUser.userstate?.name,\r\n          room_id: room.room_id,\r\n          user_id: currentUser.userstate?.id\r\n        }\r\n      },\r\n      { withCredentials: true}\r\n      ).then(response => {\r\n        if (response.data.status === 'created'){\r\n\r\n        }\r\n      }).catch(error => {\r\n        console.log(\"message error\", error)\r\n      })\r\n    }\r\n    else {\r\n      setErrors(\"メッセージを入力してください\")\r\n    }\r\n  }\r\n\r\n  const handleClick = () => {\r\n    if (invitation){\r\n      setInvitation(false);\r\n    }else{\r\n    setInvitation(true);\r\n    }\r\n  }\r\n\r\n  const leaveClick = () => {\r\n    axios.get(`${process.env.REACT_APP_API_URL}/getuser_ids`,\r\n    {\r\n      params: {\r\n        room_id: room.room_id\r\n      }\r\n    })\r\n    .then((results) => {\r\n      updateUsers(results.data)\r\n    })\r\n    axios.delete(`${process.env.REACT_APP_API_URL}/userbelongsrooms/${room.room_id}`,\r\n    {\r\n      params: {\r\n        user_id: currentUser.userstate?.id,\r\n        room_id: room.room_id,\r\n      }\r\n    })\r\n    .then((results) => {\r\n      if (user_ids.length === 1){\r\n        axios.delete(`${process.env.REACT_APP_API_URL}/rooms/${room.room_id}`,\r\n        {\r\n          params: {\r\n            id: room.room_id\r\n          }\r\n        })\r\n        .then((results) => {\r\n          console.log(results)\r\n        })\r\n        .catch((data) =>{\r\n          console.log(data);\r\n        })\r\n      }\r\n      if (results.data.status === \"deleted\"){\r\n        roomsGet();\r\n        room.setRoom_id(null);\r\n      }\r\n      else {\r\n        console.log(\"leave error\")\r\n      }\r\n    })\r\n  }\r\n\r\n  const deleteClick = () => {\r\n    if (window.confirm(\"削除しますか？\")){\r\n      axios.delete(`${process.env.REACT_APP_API_URL}/rooms/${room.room_id}`,\r\n      {\r\n        params: {\r\n          id: room.room_id\r\n        }\r\n      })\r\n      .then((results) => {\r\n        console.log(results)\r\n        if (results.data.status === \"deleted\"){\r\n          roomsGet();\r\n          room.setRoom_id(null);\r\n        }\r\n      })\r\n      .catch((data) =>{\r\n        console.log(data);\r\n      })\r\n    }\r\n  }\r\n\r\n  const iconClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item xs={3}>\r\n          <h1>{room_name}</h1>\r\n        </Grid>\r\n        \r\n        <Grid item xs={9} container justify=\"flex-end\">\r\n          <Hidden smDown>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              color=\"primary\"\r\n              onClick={handleClick}\r\n            >\r\n              招待\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              color=\"secondary\"\r\n              onClick={leaveClick}\r\n            >\r\n              退室\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              color= \"secondary\"\r\n              onClick={deleteClick}\r\n            >\r\n              ルーム削除\r\n            </Button>\r\n          </Hidden>\r\n          {/* ボタン表示 */}\r\n          <Hidden mdUp>\r\n            <IconButton onClick={(event)=>{iconClick(event);}}>\r\n              <MoreVertIcon/>\r\n            </IconButton>\r\n            <Menu\r\n              id=\"long-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={open}\r\n              onClose={handleClose}\r\n              PaperProps={{\r\n                style: {\r\n                  \r\n                },\r\n              }}\r\n            >\r\n              <MenuItem  onClick={handleClose}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className={classes.button}\r\n                  color=\"primary\"\r\n                  onClick={handleClick}\r\n                >\r\n                  招待\r\n                </Button>\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className={classes.button}\r\n                  color=\"secondary\"\r\n                  onClick={leaveClick}\r\n                >\r\n                  退室\r\n                </Button>\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className={classes.button}\r\n                  color= \"secondary\"\r\n                  onClick={deleteClick}\r\n                >\r\n                  ルーム削除\r\n                </Button>\r\n              </MenuItem>\r\n            </Menu>\r\n          </Hidden>\r\n        </Grid>\r\n      </Grid>\r\n      <div className='app-main' id={\"scroll-area\"}>\r\n        {invitation ? <Invite User_ids={user_ids} getUsers={getUsers}/>:<Messages messageData={ messages } />}\r\n      </div> \r\n      <Grid container>\r\n        <Grid item xs={10}>\r\n          <TextField  \r\n          onChange={event => setMessage(event.target.value)} \r\n          label=\"メッセージ\"\r\n          fullWidth\r\n          helperText={errors}\r\n          required\r\n          inputProps={{\r\n            maxLength: 250,\r\n          }}\r\n          onKeyDown={e => {\r\n            if (e.keyCode === 13) {\r\n              // エンターキー押下時の処理\r\n              e.preventDefault();\r\n              hundleSubmit();\r\n            }\r\n          }\r\n          }\r\n        />\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <Button \r\n            variant=\"contained\"\r\n            className={classes.button} \r\n            onClick={hundleSubmit} \r\n            color=\"primary\"\r\n            endIcon={<Icon>send</Icon>}\r\n          >\r\n            send\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Chat;","import React, { FC, useContext, useEffect, useState } from 'react'\r\nimport axios from \"axios\";\r\nimport { UserContext } from \"../../Provider\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { User } from \"../../Types\";\r\nimport '../../styles/Usershow.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\n\r\nconst useStyle = makeStyles({\r\n  root: {\r\n    marginTop: 20,\r\n    backgroundColor: 'white',\r\n    minHeight: 500,\r\n  },\r\n  name: {\r\n    margin: 20,\r\n    fontSize: 50,\r\n  },\r\n  prof: {\r\n    margin: 20,\r\n    fontSize: 25,\r\n  }\r\n});\r\n\r\n\r\nconst UserShow: FC = () => {\r\n  const [user, setUser] = useState<User>();\r\n\r\n  const User = useContext(UserContext);\r\n\r\n  const classes = useStyle();\r\n\r\n  useEffect(() => {\r\n    axios.get(`${process.env.REACT_APP_API_URL}/users/:id`,\r\n    {\r\n      params: {\r\n        user_id: User.user_id\r\n      }\r\n    })\r\n    .then((results) => {\r\n      console.log(results)\r\n      setUser(results.data)\r\n    })\r\n    .catch((data) => {\r\n      console.log(data)\r\n    })\r\n  },[User.user_id]);\r\n\r\n  return(\r\n    <div className=\"usershow\">\r\n      <List>\r\n        <ListItem>\r\n        {user &&\r\n          <ListItemAvatar>\r\n            \r\n              <Avatar src={ user.image  ? user.image : \"\" } />\r\n            \r\n          </ListItemAvatar>\r\n        }\r\n          <ListItemText primary={<h1>{user?.name}</h1>}/>\r\n        </ListItem>\r\n      </List>\r\n      \r\n      <p className={classes.prof}>{user?.profile}</p>\r\n\r\n    </div>\r\n  )\r\n};\r\nexport default UserShow;","import React, { FC, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { CurrentUserContext } from \"../../../Provider\";\r\nimport actionCable from 'actioncable';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { User } from '../../../Types';\r\nimport '../../../styles/ChatRoom.css';\r\nimport ViewMessage from '../Chat/ViewMessage';\r\n\r\ntype Props = {\r\n  cableApp :actionCable.Cable;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    inline: {\r\n      display: 'inline',\r\n    },\r\n  }),\r\n);\r\n\r\ntype article = {\r\n  title: string;\r\n  url: string;\r\n}\r\n\r\nconst Qiita: FC = () =>{\r\n  const user = useContext(CurrentUserContext);\r\n  const [text, setText] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [articles, setArticles] = useState<article[]>([]);\r\n  const [errors, setErrors] = useState(\"\");\r\n\r\n  const [flag, setFlag] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const hundleSubmit = () => {\r\n    if (text) {\r\n      setErrors(\"\");\r\n      setMessage(text);\r\n      axios.get(\"https://qiita.com/api/v2/items\",\r\n      {\r\n        params: {\r\n          \"page\": \"1\",\r\n          \"per_page\": \"20\",\r\n          \"query\": text,\r\n        }\r\n      },\r\n      ).then(response => {\r\n        console.log(response.data);\r\n        setFlag(true);\r\n        \r\n        setArticles(response.data);\r\n\r\n      }).catch(error => {\r\n        console.log(\"message error\", error)\r\n      })\r\n    }\r\n    else {\r\n      setErrors(\"メッセージを入力してください\")\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n      <h1>Qiitaくん</h1>\r\n      <div className='app-main' id={\"scroll-area\"}>\r\n        {flag && user.userstate && (<ViewMessage message={message} user={user.userstate}/>) }\r\n        \r\n        {articles.map((t)=>(\r\n          <List className={classes.root} key={t.title}>\r\n            <ListItem alignItems=\"flex-start\">\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  alt=\"Martian\"\r\n                  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT5lquvS_JqssPqAlVj1dQhMuzLgtQRUSrEYg&usqp=CAU\"\r\n                />\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={ <h4>{t.title}</h4> }\r\n                secondary={\r\n                  <React.Fragment>\r\n                    <Typography\r\n                      component=\"span\"\r\n                      variant=\"body2\"\r\n                      className={classes.inline}\r\n                      color=\"textPrimary\"\r\n                    >\r\n                    <a href={t.url}>{t.url}</a>\r\n                  </Typography>\r\n                </React.Fragment>\r\n                }\r\n              >\r\n              </ListItemText>\r\n            </ListItem>\r\n            <Divider variant=\"middle\" />\r\n          </List>\r\n        ))}\r\n      </div>\r\n      <TextField  \r\n        onChange={event => setText(event.target.value)} \r\n        label=\"メッセージ\"\r\n        style = {{width: \"80%\"}}\r\n        helperText={errors}\r\n        required\r\n        onKeyDown={e => {\r\n          if (e.keyCode === 13) {\r\n            // エンターキー押下時の処理\r\n            e.preventDefault();\r\n            hundleSubmit();\r\n          }\r\n        }\r\n        }\r\n      />\r\n      <Button \r\n        variant=\"contained\"\r\n        className={classes.button} \r\n        onClick={hundleSubmit} \r\n        color=\"primary\"\r\n        endIcon={<Icon>send</Icon>}>\r\n        send\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Qiita;","import Qiita from 'Components/Main/Bots/Qiita';\r\nimport { BotContext, RoomContext } from 'Provider';\r\nimport React, {FC, useContext} from 'react';\r\n\r\nconst Bot: FC = () => {\r\n  const bot = useContext(BotContext);\r\n  return (\r\n    <>\r\n      {bot.bot_id === 1 && <Qiita/>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Bot;","import React, { FC, useContext } from 'react';\r\nimport { MainContext } from \"../../Provider\";\r\nimport actionCable from 'actioncable';\r\nimport Chat from './Chat';\r\nimport UserShow from './Usershow';\r\n\r\nimport '../../styles/ChatRoom.css';\r\n\r\nimport Bot from './Bot';\r\n\r\n\r\ntype Props = {\r\n  cableApp :actionCable.Cable;\r\n  roomsGet: () => void;\r\n}\r\n\r\n\r\nconst Main: FC<Props> = ({cableApp, roomsGet}) =>{\r\n  const main = useContext(MainContext);\r\n\r\n  return (\r\n    <>\r\n      {main.type === 'Chat' && <Chat cableApp={cableApp} roomsGet={roomsGet}/>}\r\n      {main.type === 'Api' && <Bot/>}\r\n      {main.type === 'UserPage' && <UserShow />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Main;","import React, { FC, useContext, useState } from 'react';\r\nimport actionCable from 'actioncable';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SidePanel from './Sidepanel/SidePanel';\r\nimport axios from 'axios';\r\nimport { CurrentUserContext, RoomContext } from 'Provider';\r\nimport { Room } from '../Types';\r\nimport Main from './Main/Main';\r\n\r\nimport '../styles/Home.css';\r\n\r\ntype Props = {\r\n  cableApp :actionCable.Cable;\r\n}\r\n\r\n\r\nconst Home: FC<Props> = ({cableApp}) => {\r\n  const room = useContext(RoomContext);\r\n  const [rooms, setRooms] = useState<Room[]>([]);\r\n\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  const roomsGet = () => {\r\n    axios.get(`${process.env.REACT_APP_API_URL}/rooms`,\r\n    {\r\n      params: {\r\n        user_id: currentUser.userstate?.id\r\n      }\r\n    })\r\n    .then((results) => {\r\n      setRooms(results.data)\r\n      room.setRoom_id(0);\r\n      console.log(rooms)\r\n    })\r\n    .catch((data) => {\r\n      console.log(data)\r\n    })\r\n  }\r\n\r\n  return(\r\n    <div className=\"main\">\r\n    <Grid container spacing={2}>\r\n      <Grid item md={3} xs={4}>\r\n        <SidePanel/>\r\n      </Grid>\r\n      <Grid item md={9} xs={8}>\r\n        <Main cableApp={cableApp} roomsGet={roomsGet}/>\r\n      </Grid>\r\n    </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React, { useState, SyntheticEvent, useContext, FC } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport { User } from \"../../Types\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useForm } from 'react-hook-form';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nimport { CurrentUserContext, UserContext } from \"../../Provider\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\ntype Props = {\r\n  setauth: () => void;\r\n}\r\n\r\nconst Login:FC<Props> =({setauth}) => { \r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const userstate = useContext(CurrentUserContext);\r\n\r\n  const handleSuccessfulAuthentication = (data :any) =>{\r\n    userstate.setUserState(data.user);\r\n    userstate.setLoginStatus(true);\r\n    navigate(\"/\")\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    axios.post(`${process.env.REACT_APP_API_URL}/login`,\r\n    {\r\n      user: {\r\n        email: email,\r\n        password: password,\r\n      }\r\n    },\r\n    { withCredentials: true }\r\n    ).then(response => {\r\n      if (response.data.logged_in){\r\n        handleSuccessfulAuthentication(response.data)\r\n      }\r\n      else{\r\n        toast(response.data.errors[0]);\r\n        toast(response.data.errors[1]);\r\n        console.log(response.data.errors)\r\n      }\r\n    }).catch(error => {\r\n      console.log(\"registraion error\", error)\r\n    })\r\n  }\r\n\r\n  return(\r\n    <Container component=\"main\" maxWidth=\"xs\" style={{backgroundColor:'white'}}>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          ログイン\r\n        </Typography>\r\n        <form className={classes.form} noValidate　onSubmit={handleSubmit(onSubmit)}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            inputRef={register({required: true, pattern: /^\\S+@\\S+$/i})}\r\n            error={Boolean(errors.email)}\r\n            helperText={errors.email && \"正しいメールアドレスを入力してください\"}\r\n            onChange={event => setEmail(event.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            inputRef={register({required: true})}\r\n            error={Boolean(errors.password)}\r\n            helperText={errors.password && \"正しいパスワードを入力してください\"}\r\n            onChange={event => setPassword(event.target.value)}\r\n          />\r\n          \r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            ログイン\r\n          </Button>\r\n          <Grid container>\r\n            <Grid container item justify=\"flex-end\">\r\n              <Button  onClick={setauth}>\r\n                Don't have an account? Sign Up\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <ToastContainer/>\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;","import React, { useState, SyntheticEvent, useContext, FC } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { CurrentUserContext, UserContext } from \"../../Provider\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useForm } from 'react-hook-form';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\ninterface HomeProps {\r\n  handleSuccessfulAuthentication: (data: any) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\ntype Props = {\r\n  setauth: () => void;\r\n}\r\n\r\nconst Registration:FC<Props> = ({setauth}) => { \r\n  const { register, handleSubmit, errors } = useForm();\r\n  const user = useContext(CurrentUserContext);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSuccessfulAuthentication = (data :any) =>{\r\n    user.setUserState(data.user);\r\n    user.setLoginStatus(true);\r\n    navigate(\"/\")\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    axios.post(`${process.env.REACT_APP_API_URL}/signup`,\r\n    {\r\n      user: {\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n        password_confirmation: passwordConfirmation\r\n      }\r\n    },\r\n    { withCredentials: true }\r\n    ).then(response => {\r\n\r\n      if (response.data.status === 'created'){\r\n        handleSuccessfulAuthentication(response.data)\r\n      }\r\n      else {\r\n        toast(response.data.errors)\r\n        console.log(response.data)\r\n      }\r\n\r\n    }).catch(error => {\r\n      console.log(\"registraion error\", error)\r\n    })\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\" style={{backgroundColor:'white'}}>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  autoComplete=\"name\"\r\n                  name=\"Name\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  id=\"Name\"\r\n                  label=\"Name\"\r\n                  inputRef={register({required: true})}\r\n                  error={Boolean(errors.name)}\r\n                  helperText={errors.name && \"名前を入力してください\"}      \r\n                  onChange={event => setName(event.target.value)}\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  inputRef={register({required: true, pattern: /^\\S+@\\S+$/i})}\r\n                  error={Boolean(errors.email)}\r\n                  helperText={errors.email && \"正しいメールアドレスを入力してください\"}      \r\n                  onChange={event => setEmail(event.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  inputRef={register({required: true})}\r\n                  error={Boolean(errors.email)}\r\n                  helperText={errors.password && \"正しいパスワードを入力してください\"}      \r\n                  onChange={event => setPassword(event.target.value)}\r\n                  autoComplete=\"current-password\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  name=\"passwordconfirmation\"\r\n                  label=\"PasswordConfirmation\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  inputRef={register({required: true})}\r\n                  error={Boolean(errors.passwordconfirmation)}\r\n                  helperText={errors.passwordconfirmation && \"正しいパスワードを入力してください\"}      \r\n                  onChange={event => setPasswordConfirmation(event.target.value)}\r\n                  autoComplete=\"current-password\"\r\n                />\r\n              </Grid>\r\n              \r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Button onClick={setauth} >\r\n                  Already have an account? Sign in\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <ToastContainer/>\r\n      </Container>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Registration;","import React, { useState } from 'react';\r\nimport Login from \"./Login\";\r\nimport Registrations from \"./Registrations\";\r\n\r\nconst Auth = () => {\r\n  const [auth, setAuth] = useState(false);\r\n\r\n  const setauth = () => {\r\n    if(auth){\r\n      setAuth(false);\r\n    }else{\r\n      setAuth(true);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      {auth ? <Registrations setauth={setauth}/> : <Login setauth={setauth}/>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Auth;","import React, { FC, useContext, useEffect, useState } from 'react'\r\nimport {  useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { CurrentUserContext } from \"../Provider\";\r\nimport { User } from \"../Types\";\r\nimport Container from '@material-ui/core/Container'\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\n\r\nconst useStyle = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: 20,\r\n      backgroundColor: 'white',\r\n      minHeight: 500,\r\n    },\r\n    name: {\r\n      paddingTop: 20,\r\n      margin: 20,\r\n      fontSize: 50,\r\n    },\r\n    prof: {\r\n      margin: 20,\r\n      fontSize: 25,\r\n    },\r\n    large: {\r\n      width: theme.spacing(7),\r\n      height: theme.spacing(7),\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nconst Userpage: FC = () => {\r\n  const [user, setUser] = useState<User>();\r\n\r\n  const User = useContext(CurrentUserContext);\r\n\r\n  const classes = useStyle();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    axios.get(`${process.env.REACT_APP_API_URL}/users/:id`,\r\n    {\r\n      params: {\r\n        user_id: User.userstate?.id\r\n      }\r\n    })\r\n    .then((results) => {\r\n      console.log(results)\r\n      setUser(results.data)\r\n    })\r\n    .catch((data) => {\r\n      console.log(data)\r\n    })\r\n  },[]);\r\n\r\n\r\n  const changeProf = () => {\r\n    navigate(\"/changeprof\");\r\n  }\r\n\r\n  return(\r\n    <Container className={classes.root}>\r\n      <List>\r\n        <ListItem>\r\n        {user &&\r\n          <ListItemAvatar>\r\n              <Avatar src={ user.image  ? user.image : \"\" } className={classes.large} />\r\n          </ListItemAvatar>\r\n        }\r\n          <ListItemText primary={<h1 className={classes.name}>{user?.name}</h1>}/>\r\n        </ListItem>\r\n      </List>\r\n      \r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={changeProf}\r\n      >\r\n        編集\r\n      </Button>\r\n      \r\n      <p className={classes.prof}>{user?.profile}</p>\r\n    </Container>\r\n  )\r\n};\r\nexport default Userpage;","import React, { useContext, useState, useEffect, SyntheticEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CurrentUserContext, UserContext } from \"../Provider\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useNavigate } from 'react-router';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 20,\r\n    backgroundColor: 'white',\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst ChageProf = () => {\r\n  const currentUser = useContext(CurrentUserContext);\r\n  const classes = useStyle();\r\n\r\n  const [name,setName] = useState(currentUser.userstate?.name);\r\n  const [prof,setProf] = useState(currentUser.userstate?.profile);\r\n  const  [loading, setLoading] = useState(true);\r\n  const [image, setImage] = useState<string | ArrayBuffer | null>(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios.get(`${process.env.REACT_APP_API_URL}/users/:id`,\r\n    {\r\n      params: {\r\n        user_id: currentUser.userstate?.id\r\n      }\r\n    })\r\n    .then((results) => {\r\n      console.log(results)\r\n      currentUser.setUserState(results.data)\r\n      setName(results.data.name)\r\n      setProf(results.data.profile)\r\n      setLoading(false);\r\n    })\r\n    .catch((data) => {\r\n      console.log(data)\r\n    })\r\n  },[]);\r\n\r\n  const handleSubmit = () => {\r\n    axios.patch(`${process.env.REACT_APP_API_URL}/users/${currentUser.userstate?.id}`,\r\n    {\r\n      user: {\r\n        user_id: currentUser.userstate?.id,\r\n        name: name,\r\n        profile: prof,\r\n        image: image,\r\n      }\r\n    })\r\n    .then((response) => {\r\n      if(response.data.status === 'created'){\r\n        navigate(`/userpage/${currentUser.userstate?.id}`);\r\n      }\r\n      else{\r\n        console.log(response.data.errors);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n\r\n    axios.get(`${process.env.REACT_APP_API_URL}/logged_in`, { withCredentials: true})\r\n      .then((response) => {\r\n        currentUser.setUserState(response.data.user);\r\n        \r\n        \r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n    navigate(`/userpage/${currentUser.userstate?.id}`);\r\n  }\r\n\r\n  const setimage = (e:any) => {\r\n    if(document.getElementById(\"canvas\")){\r\n    let canvas:any =  document.getElementById(\"canvas\");\r\n    \r\n    if (canvas){\r\n    let ctx = canvas.getContext(\"2d\");\r\n    let maxW = 250;\r\n    let maxH = 250;\r\n\r\n    let img = new Image();\r\n    img.onload = () => {\r\n      let iw = img.width;\r\n      let ih = img.height;\r\n      let scale = Math.min(maxW / iw, maxH / ih);\r\n      let iwScaled = iw * scale;\r\n      let ihScaled = ih * scale;\r\n      canvas.width = iwScaled;\r\n      canvas.height = ihScaled;\r\n      ctx.drawImage(img, 0, 0, iwScaled, ihScaled);\r\n      const resizeData = canvas.toDataURL(\"image/jpeg\", 0.5);\r\n      setImage(resizeData);\r\n    };\r\n    img.src = URL.createObjectURL(e.target.files[0]);\r\n  }}\r\n  };\r\n\r\n  \r\n  return (\r\n    <>\r\n    {\r\n      loading ? <></> :\r\n          <Container className={classes.root}>\r\n            <Box p={2}>\r\n              <h1>編集</h1>\r\n              <form>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  label=\"名前\"\r\n                  fullWidth\r\n                  defaultValue={name}\r\n                  autoFocus\r\n                  name=\"name\"\r\n                  onChange={event => setName(event.target.value)}\r\n                />\r\n                <label>プロフィール画像</label>\r\n                {image &&\r\n                  <img src={typeof image === 'string' ? image : \"\" } />\r\n                }\r\n                <canvas\r\n                  id=\"canvas\"\r\n                  style={{\r\n                    display: \"none\"\r\n                  }}\r\n                  width=\"64\"\r\n                  height=\"64\"\r\n                />\r\n\r\n                <Button\r\n                  component=\"label\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  Upload File\r\n                  <input\r\n                    type=\"file\"\r\n                    className=\"inputFileBtnHide\"\r\n                    style={{ display: \"none\" }}\r\n                    onChange={e => setimage(e)}\r\n                  />\r\n                </Button>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  label=\"Profile\"\r\n                  multiline\r\n                  rows={4}\r\n                  fullWidth\r\n                  defaultValue={prof}\r\n                  name=\"prof\"\r\n                  onChange={event => setProf(event.target.value)}\r\n                />\r\n                \r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  onClick={handleSubmit}\r\n                  >\r\n                    送信\r\n                </Button>\r\n              </form>\r\n            </Box>\r\n          </Container>\r\n    }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ChageProf;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Route, Navigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { CurrentUserContext } from \"./Provider\";\r\n\r\nconst Container = ({Component, cableApp, redirectLink, ...props}: any) =>{\r\n  const user = useContext(CurrentUserContext);\r\n\r\n  if(user.loginStatus === true) {\r\n    if(user.userstate){\r\n      return <Component cableApp={cableApp} {...props} />\r\n    }\r\n    else {\r\n      return <Navigate to={redirectLink} />;\r\n    }\r\n  }\r\n  else {\r\n    return <Navigate to={redirectLink} />;\r\n  }\r\n};\r\n\r\nconst PrivateRoute = ({ component: Component, redirectLink, cableApp,path, ...props }: any) => {\r\n  \r\n  const user = useContext(CurrentUserContext);\r\n  const  [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const userget = async () : Promise<void> => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/logged_in`, { withCredentials: true});\r\n        if (response.data.logged_in && !user.loginStatus){\r\n          user.setLoginStatus(true)\r\n          user.setUserState(response.data.user)\r\n          setLoading(false);\r\n        } else if (!response.data.logged_in && user.loginStatus){\r\n          user.setLoginStatus(false)\r\n          user.setUserState(null)\r\n          setLoading(false);\r\n        }\r\n        else {\r\n          setLoading(false);\r\n        }\r\n      } catch(error) {\r\n        console.log(\"ログインエラー\", error)\r\n        setLoading(false);\r\n      };\r\n    };\r\n    userget();\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? <></> : <Route path={path} \r\n        element={<Container cableApp={cableApp} redirectLink={redirectLink} Component={Component}/>\r\n        }/>}\r\n    </>\r\n  ) \r\n}\r\n\r\n\r\n\r\nexport default PrivateRoute;","import React, { FC, useContext } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Navigate, Route, Routes, useNavigate } from 'react-router';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Home from './Components/Home';\nimport Auth from \"./Components/auth/auth\";\nimport Login from './Components/auth/Login';\nimport Userpage from './Components/Userpage';\nimport ChangeProf from \"./Components/ChangeProf\";\nimport { CurrentUserContext } from \"./Provider\";\nimport actionCable from 'actioncable';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport  PrivateRoute from \"./PrivateRoute\";\nimport { Box } from '@material-ui/core';\n\nimport './styles/App.css';\nconst title = 'Home';\n\ntype Props = {\n  cableApp :actionCable.Cable;\n}\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 250,\n  },\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appButton: {\n    textTransform: 'none',\n  },\n}));\n\n\n\nconst App: FC<Props> = ({ cableApp }) => {\n\n  const classes = useStyles();\n\n  const user = useContext(CurrentUserContext);\n\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    user.setLoginStatus(false);\n    user.setUserState(null);\n    navigate(\"/auth\");\n  }\n\n  const handleLogoutClick = () => {\n    axios.delete(`${process.env.REACT_APP_API_URL}/logout`,{ withCredentials: true })\n      .then(response => {\n        handleLogout()\n      }).catch(error => console.log(\"ログアウトエラー\", error))\n  }\n  \n\n  return (\n  <>\n    <Helmet htmlAttributes={{ lang: 'ja' }}>\n      <title>{title}</title>\n    </Helmet>\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          \n          <Typography variant=\"h6\" className={classes.title}>\n            <Link to=\"/\" style={{color: 'white', textDecoration: \"none\" }}>YUUTA</Link>\n          </Typography>\n          { (() => {\n            try{\n            if (user.userstate){\n            return(\n              <>\n                <Button className={classes.appButton}><Link to={'/mypage'} style={{color: 'white', textDecoration: \"none\"}}>{user.userstate.name}</Link></Button>\n                <Button color=\"inherit\"　onClick={handleLogoutClick}>ログアウト</Button>\n              </>\n            );}\n            }\n            catch{\n              return<></>\n            }\n          })()}\n        </Toolbar>\n      </AppBar>\n      \n    </div>\n\n    <Routes>\n      <PrivateRoute  path=\"/\" component={Home} cableApp={cableApp} redirectLink=\"/auth\"/>\n      <PrivateRoute path=\"/mypage\" component={Userpage} redirectLink=\"/auth\"/>\n      <Route path=\"/auth\" element={user && user.loginStatus ? <Home cableApp={cableApp}/> \n        : <Auth/> }/>\n      <PrivateRoute path=\"/changeprof\" component={ChangeProf} redirectLink=\"/auth\"/>\n      <PrivateRoute path=\"/home\" component={Home} cableApp={cableApp} redirectLink=\"/auth\"/>\n      <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n    </Routes>\n  </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport actionCable from 'actioncable';\nimport { Provider } from \"./Provider\";\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport './styles/index.css';\n\nconst cable = actionCable.createConsumer('ws://localhost:3001/cable');\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider>\n      <BrowserRouter>\n        <App cableApp={cable} />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root') as HTMLElement,\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}